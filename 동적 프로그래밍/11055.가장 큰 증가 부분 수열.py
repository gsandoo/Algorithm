# 문제
# 수열 A가 주어졌을 때, 그 수열의 증가 부분 수열 중에서 합이 가장 큰 것을 구하는 프로그램을 작성하시오.

# 예를 들어, 수열 A = {1, 100, 2, 50, 60, 3, 5, 6, 7, 8} 인 경우에 합이 가장 큰 증가 부분 수열은 A = {1, 100, 2, 50, 60, 3, 5, 6, 7, 8} 이고, 합은 113이다.

# 입력
# 첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

# 둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

# 출력
# 첫째 줄에 수열 A의 합이 가장 큰 증가 부분 수열의 합을 출력한다.

# 예제 입력 1 
# 10
# 1 100 2 50 60 3 5 6 7 8


# 예제 출력 1 
# 113


# 문제풀이:

# 수열 a = [1, 100, 2, 50, 60, 3, 5, 6, 7, 8]이라고 했을때
# dp에는 각 자리에 올 수있는 가장 큰 값을 넣게 된다.
# dp = [1, 101, 3, 53, 113, 6, 11, 17, 24, 32]
# dp[i]에 오게될 값은 a[0] ~ a[i - 1]의 값 중 a[i]보다 작은 값의 인덱스를 구한 뒤
# 그 인덱스에 맞는 dp의 값 중 가장 큰 값을 a[i]에 더하면 된다.


# n= int(input())
# arr=list(map(int,input().split()))
# dp=[]


n = int(input())
a = list(map(int, input().split()))
dp = [0 for i in range(n)]
dp[0] = a[0]                # 0의 자리 값을 지정해주고 시작
for i in range(1, n):       # 1부터 n 앞자리 까지 (0자리 는 이미 구했으니)
    s = []                  # i 보다 작은 전 값들을 담아두는 리스트
    for j in range(i - 1, -1, -1): #i-1 부터 0까지 역순으로 리스트 s 에 저장
        if a[i] > a[j]:             # i값이 전 값 (i-1) 보다 크다면
            s.append(dp[j])         # s 배열에 에 dp배열(전 값들의 합) j 값을 저장.
    if not s:                   
        dp[i] = a[i]
    else:
        dp[i] = a[i] + max(s)       # a(i)와 s의 최댓값을 더하기
print(max(dp))