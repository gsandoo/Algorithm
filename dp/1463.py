n = int(input())
d = [0] * (n + 1)	# [0,0,0,0,0,0,0,0,0,0] 저장해둔다.
# 0 -> 0
# 1 -> 0
# 2 -> 1
# 3 -> 1
# 4 -> 2
# 5 -> 3
# 6 -> 2
# 7 -> 3
# 8 -> 3
# 9 -> 2
# 10 -> 3

# 대략적으로 계산해보면 이런 배열이 나온다 . [0,0,1,1,2,3,2,3,3,2,3]

for i in range(2, n + 1): #2부터 시작하는 이유는 배열의 값이 2자리 부터 시작하기 때문

    d[i] = d[i - 1] + 1 #d[n]으로 할 시 n-1자리때문에 값이 바뀜. d[i] 가 맞음.
                        #d[i-1]+1 은 배열 i의 앞자리 값에 1번 횟수를 더해주는 거다. 
                        # 3가지 푸는 방법 중 하나임. (-1 하기) 
    
    if i % 3 == 0:      # 3으로 나눈다 (3가지방법 중 두번째)
        d[i] = min(d[i], d[i // 3] + 1)	#최솟값을 구한다.
    if i % 2 == 0:      # 2로 나눈다. (3가지방법 중 마지막)
        d[i] = min(d[i], d[i // 2] + 1) # 최솟값을 구한다.
print(d[n]) #n번째 자리를 구한다.