# 문제
# 수열 A가 주어졌을 때, 가장 긴 증가하는 부분 수열을 구하는 프로그램을 작성하시오.

# 예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분 수열은 A = {10, 20, 10, 30, 20, 50} 이고, 길이는 4이다.

# 입력
# 첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

# 둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

# 출력
# 첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.

# 예제 입력 1 
# 6
# 10 20 10 30 20 50


# 예제 출력 1 
#  4


# LIS (Longest Increasing Subsequence) 문제
# for 문 두 개 활용하여 전 값과 현재 값을 비교 

N = int(input()) #갯수 받고

A = list(map(int, input().split())) #리스트를 A에 할당

dp = [1] * N  # [1,1,1 ... ] 기본 값

for i in range(N):          # i = 0,1,2,3,4...
    for j in range(i):        # j = 0,1,2,3...  
        if A[j] < A[i]: #앞의 값이 뒤의 값보다 크다면
            dp[i] = max(dp[i],dp[j]+1) 

print(max(dp))


